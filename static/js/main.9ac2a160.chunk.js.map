{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api/api.js","App.jsx","index.js"],"names":["TodoList","props","className","type","placeholder","onChange","event","finder","target","value","completedTodo","onClick","randomOrder","todos","map","todo","key","id","ClassNames","completed","checked","readOnly","title","selectedTodo","selectedUSer","userId","CurrentUser","name","email","phone","clearedUser","baseURL","getUsers","fetch","then","response","json","App","state","todosPublic","selectedUserId","user","selectedUser","todoId","setState","result","data","clear","todosSrc","filter","includes","sort","Math","random","item","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ac2a160.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport './TodoList.scss';\n\nexport const TodoList = props => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n\n      <input\n        type=\"text\"\n        placeholder=\"Find\"\n        onChange={(event) => {\n          props.finder(event.target.value);\n        }}\n      />\n\n      <select\n        onChange={(event) => {\n          props.completedTodo(event.target.value);\n        }}\n      >\n        <option value=\"all\">All</option>\n        <option value=\"\">Active</option>\n        <option value=\"completed\">Completed</option>\n      </select>\n\n      <button\n        type=\"button\"\n        onClick={() => {\n          props.randomOrder();\n        }}\n      >\n        Random Order\n      </button>\n\n      <ul className=\"TodoList__list\">\n\n        {\n          props.todos.map(todo => (\n            <li\n              key={todo.id}\n              className={ClassNames(\n                'TodoList__item',\n                { ' TodoList__item TodoList__item--checked': todo.completed },\n                {\n                  ' TodoList__item TodoList__item--unchecked':\n                      !todo.completed,\n                },\n              )}\n            >\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed === true}\n                  readOnly\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                className={ClassNames(\n                  'TodoList__user-button button',\n                  { ' TodoList__user-button--selected':\n                        props.selectedTodo === todo.id },\n                )}\n                type=\"button\"\n                onClick={() => {\n                  props.selectedUSer(todo.userId, todo.id);\n                }}\n              >\n                {`User #${todo.userId}`}\n              </button>\n            </li>\n          ))\n        }\n\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  finder: PropTypes.func.isRequired,\n  completedTodo: PropTypes.func.isRequired,\n  selectedUSer: PropTypes.func.isRequired,\n  randomOrder: PropTypes.func.isRequired,\n  selectedTodo: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './CurrentUser.scss';\n\nexport const CurrentUser = ({ id, name, email, phone, clearedUser }) => (\n  <div className=\"CurrentUser\">\n    <h2 className=\"CurrentUser__title\">\n      <span>{`Selected user: ${id}`}</span>\n    </h2>\n\n    <h3 className=\"CurrentUser__name\">{name}</h3>\n    <p className=\"CurrentUser__email\">{email}</p>\n    <p className=\"CurrentUser__phone\">{phone}</p>\n\n    <button\n      className=\"CurrentUser__clear\"\n      type=\"button\"\n      onClick={() => {\n        clearedUser();\n      }}\n    >\n      Clear\n    </button>\n  </div>\n);\n","const baseURL = 'https://mate-api.herokuapp.com';\n\nexport const getTodos = () => fetch(`${baseURL}/todos`)\n  .then(response => response.json());\n\nexport const getUsers = userId => fetch(`${baseURL}/users/${userId}`)\n  .then(response => response.json());\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos, getUsers } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todosPublic: [],\n    selectedUserId: 0,\n    selectedTodo: 0,\n    user: null,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(result => (\n        this.setState({\n          todosPublic: result.data.filter(item => item.userId),\n          todosSrc: result.data.filter(item => item.userId),\n        })\n      ));\n\n    getUsers(this.state.selectedUserId)\n      .then(result => (\n        this.setState({\n          user: result,\n        })\n      ));\n  }\n\n  selectedUser = (userId, todoId) => {\n    this.setState({\n      selectedUserId: userId,\n      selectedTodo: todoId,\n    });\n\n    getUsers(userId)\n      .then(result => (\n        this.setState({\n          user: result.data,\n        })\n      ));\n  }\n\n  clear = () => {\n    this.setState({\n      selectedUserId: 0,\n      user: null,\n    });\n  }\n\n  completedTodo = (value) => {\n    if (value === 'all') {\n      this.setState(state => ({\n        todosPublic: state.todosSrc,\n      }));\n\n      return;\n    }\n\n    this.setState(state => ({\n      todosPublic: [...state.todosSrc].filter(todo => (\n        value === 'completed'\n          ? todo.completed\n          : !todo.completed\n      )),\n    }));\n  }\n\n  finder = (value) => {\n    this.setState(state => ({\n      todosPublic: [...state.todosSrc].filter(todo => (\n        todo.title\n          ? todo.title.includes(value)\n          : ''\n      )),\n    }));\n  }\n\n  randomOrder = () => {\n    this.setState(state => ({\n      todosPublic: [...state.todosPublic]\n        .sort(() => Math.random() - 0.5),\n    }));\n  }\n\n  render() {\n    const { todosPublic, selectedUserId, selectedTodo, user } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todosPublic}\n            selectedTodo={selectedTodo}\n            selectedUSer={this.selectedUser}\n            finder={this.finder}\n            completedTodo={this.completedTodo}\n            randomOrder={this.randomOrder}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                {...user}\n                clearedUser={this.clear}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}